name: Manual deploy API

on: workflow_dispatch

jobs:
    build-deploy:
        runs-on: ubuntu-latest
        steps:
            - name: Check out Git repository
              uses: actions/checkout@v2

            - name: Set up Node.js
              uses: actions/setup-node@v2
              with:
                  node-version: 16

            - uses: actions/cache@v2
              id: yarn-cache
              with:
                  path: '**/node_modules'
                  key: ${{ runner.os }}-node-modules-${{ hashFiles('**/yarn.lock') }}

            - name: Install Dependencies
              if: steps.yarn-cache.outputs.cache-hit != 'true'
              run: yarn install --frozen-lockfile

            - name: Create env production file
              run: |
                  touch .env
                  echo LINE_APP_CLIENT_ID=${{ secrets.LINE_APP_CLIENT_ID }} >> .env
                  echo LINE_APP_CLIENT_SECRET=${{ secrets.LINE_APP_CLIENT_SECRET }} >> .env
                  echo LINE_APP_SERVICE_ACCOUNT=${{ secrets.LINE_APP_SERVICE_ACCOUNT }} >> .env
                  echo LINE_APP_PRIVATE_KEY=${{ secrets.LINE_APP_PRIVATE_KEY }} >> .env
                  echo LINE_APP_BOT_ID=${{ secrets.LINE_APP_BOT_ID }} >> .env
                  echo KORE_BOT_ID=${{ secrets.KORE_BOT_ID }} >> .env
                  echo KORE_CLIENT_ID=${{ secrets.KORE_CLIENT_ID }} >> .env
                  echo KORE_CLIENT_SECRET=${{ secrets.KORE_CLIENT_SECRET }} >> .env
                  cat .env

            - name: Deploy
              run: yarn deploy:dev
              env:
                  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
                  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
